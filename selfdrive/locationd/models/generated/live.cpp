#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5465641885577763319) {
   out_5465641885577763319[0] = 0;
   out_5465641885577763319[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5465641885577763319[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5465641885577763319[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5465641885577763319[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5465641885577763319[5] = -sin(in_vec[1]);
   out_5465641885577763319[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5465641885577763319[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5465641885577763319[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5465641885577763319[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5465641885577763319[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5465641885577763319[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5465641885577763319[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5465641885577763319[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5465641885577763319[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5465641885577763319[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5465641885577763319[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5465641885577763319[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2162730634078729501) {
   out_2162730634078729501[0] = delta_x[0] + nom_x[0];
   out_2162730634078729501[1] = delta_x[1] + nom_x[1];
   out_2162730634078729501[2] = delta_x[2] + nom_x[2];
   out_2162730634078729501[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2162730634078729501[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2162730634078729501[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2162730634078729501[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2162730634078729501[7] = delta_x[6] + nom_x[7];
   out_2162730634078729501[8] = delta_x[7] + nom_x[8];
   out_2162730634078729501[9] = delta_x[8] + nom_x[9];
   out_2162730634078729501[10] = delta_x[9] + nom_x[10];
   out_2162730634078729501[11] = delta_x[10] + nom_x[11];
   out_2162730634078729501[12] = delta_x[11] + nom_x[12];
   out_2162730634078729501[13] = delta_x[12] + nom_x[13];
   out_2162730634078729501[14] = delta_x[13] + nom_x[14];
   out_2162730634078729501[15] = delta_x[14] + nom_x[15];
   out_2162730634078729501[16] = delta_x[15] + nom_x[16];
   out_2162730634078729501[17] = delta_x[16] + nom_x[17];
   out_2162730634078729501[18] = delta_x[17] + nom_x[18];
   out_2162730634078729501[19] = delta_x[18] + nom_x[19];
   out_2162730634078729501[20] = delta_x[19] + nom_x[20];
   out_2162730634078729501[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2784842220323608381) {
   out_2784842220323608381[0] = -nom_x[0] + true_x[0];
   out_2784842220323608381[1] = -nom_x[1] + true_x[1];
   out_2784842220323608381[2] = -nom_x[2] + true_x[2];
   out_2784842220323608381[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2784842220323608381[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2784842220323608381[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2784842220323608381[6] = -nom_x[7] + true_x[7];
   out_2784842220323608381[7] = -nom_x[8] + true_x[8];
   out_2784842220323608381[8] = -nom_x[9] + true_x[9];
   out_2784842220323608381[9] = -nom_x[10] + true_x[10];
   out_2784842220323608381[10] = -nom_x[11] + true_x[11];
   out_2784842220323608381[11] = -nom_x[12] + true_x[12];
   out_2784842220323608381[12] = -nom_x[13] + true_x[13];
   out_2784842220323608381[13] = -nom_x[14] + true_x[14];
   out_2784842220323608381[14] = -nom_x[15] + true_x[15];
   out_2784842220323608381[15] = -nom_x[16] + true_x[16];
   out_2784842220323608381[16] = -nom_x[17] + true_x[17];
   out_2784842220323608381[17] = -nom_x[18] + true_x[18];
   out_2784842220323608381[18] = -nom_x[19] + true_x[19];
   out_2784842220323608381[19] = -nom_x[20] + true_x[20];
   out_2784842220323608381[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8629437051351605834) {
   out_8629437051351605834[0] = 1.0;
   out_8629437051351605834[1] = 0;
   out_8629437051351605834[2] = 0;
   out_8629437051351605834[3] = 0;
   out_8629437051351605834[4] = 0;
   out_8629437051351605834[5] = 0;
   out_8629437051351605834[6] = 0;
   out_8629437051351605834[7] = 0;
   out_8629437051351605834[8] = 0;
   out_8629437051351605834[9] = 0;
   out_8629437051351605834[10] = 0;
   out_8629437051351605834[11] = 0;
   out_8629437051351605834[12] = 0;
   out_8629437051351605834[13] = 0;
   out_8629437051351605834[14] = 0;
   out_8629437051351605834[15] = 0;
   out_8629437051351605834[16] = 0;
   out_8629437051351605834[17] = 0;
   out_8629437051351605834[18] = 0;
   out_8629437051351605834[19] = 0;
   out_8629437051351605834[20] = 0;
   out_8629437051351605834[21] = 0;
   out_8629437051351605834[22] = 1.0;
   out_8629437051351605834[23] = 0;
   out_8629437051351605834[24] = 0;
   out_8629437051351605834[25] = 0;
   out_8629437051351605834[26] = 0;
   out_8629437051351605834[27] = 0;
   out_8629437051351605834[28] = 0;
   out_8629437051351605834[29] = 0;
   out_8629437051351605834[30] = 0;
   out_8629437051351605834[31] = 0;
   out_8629437051351605834[32] = 0;
   out_8629437051351605834[33] = 0;
   out_8629437051351605834[34] = 0;
   out_8629437051351605834[35] = 0;
   out_8629437051351605834[36] = 0;
   out_8629437051351605834[37] = 0;
   out_8629437051351605834[38] = 0;
   out_8629437051351605834[39] = 0;
   out_8629437051351605834[40] = 0;
   out_8629437051351605834[41] = 0;
   out_8629437051351605834[42] = 0;
   out_8629437051351605834[43] = 0;
   out_8629437051351605834[44] = 1.0;
   out_8629437051351605834[45] = 0;
   out_8629437051351605834[46] = 0;
   out_8629437051351605834[47] = 0;
   out_8629437051351605834[48] = 0;
   out_8629437051351605834[49] = 0;
   out_8629437051351605834[50] = 0;
   out_8629437051351605834[51] = 0;
   out_8629437051351605834[52] = 0;
   out_8629437051351605834[53] = 0;
   out_8629437051351605834[54] = 0;
   out_8629437051351605834[55] = 0;
   out_8629437051351605834[56] = 0;
   out_8629437051351605834[57] = 0;
   out_8629437051351605834[58] = 0;
   out_8629437051351605834[59] = 0;
   out_8629437051351605834[60] = 0;
   out_8629437051351605834[61] = 0;
   out_8629437051351605834[62] = 0;
   out_8629437051351605834[63] = 0;
   out_8629437051351605834[64] = 0;
   out_8629437051351605834[65] = 0;
   out_8629437051351605834[66] = -0.5*state[4];
   out_8629437051351605834[67] = -0.5*state[5];
   out_8629437051351605834[68] = -0.5*state[6];
   out_8629437051351605834[69] = 0;
   out_8629437051351605834[70] = 0;
   out_8629437051351605834[71] = 0;
   out_8629437051351605834[72] = 0;
   out_8629437051351605834[73] = 0;
   out_8629437051351605834[74] = 0;
   out_8629437051351605834[75] = 0;
   out_8629437051351605834[76] = 0;
   out_8629437051351605834[77] = 0;
   out_8629437051351605834[78] = 0;
   out_8629437051351605834[79] = 0;
   out_8629437051351605834[80] = 0;
   out_8629437051351605834[81] = 0;
   out_8629437051351605834[82] = 0;
   out_8629437051351605834[83] = 0;
   out_8629437051351605834[84] = 0;
   out_8629437051351605834[85] = 0;
   out_8629437051351605834[86] = 0;
   out_8629437051351605834[87] = 0.5*state[3];
   out_8629437051351605834[88] = 0.5*state[6];
   out_8629437051351605834[89] = -0.5*state[5];
   out_8629437051351605834[90] = 0;
   out_8629437051351605834[91] = 0;
   out_8629437051351605834[92] = 0;
   out_8629437051351605834[93] = 0;
   out_8629437051351605834[94] = 0;
   out_8629437051351605834[95] = 0;
   out_8629437051351605834[96] = 0;
   out_8629437051351605834[97] = 0;
   out_8629437051351605834[98] = 0;
   out_8629437051351605834[99] = 0;
   out_8629437051351605834[100] = 0;
   out_8629437051351605834[101] = 0;
   out_8629437051351605834[102] = 0;
   out_8629437051351605834[103] = 0;
   out_8629437051351605834[104] = 0;
   out_8629437051351605834[105] = 0;
   out_8629437051351605834[106] = 0;
   out_8629437051351605834[107] = 0;
   out_8629437051351605834[108] = -0.5*state[6];
   out_8629437051351605834[109] = 0.5*state[3];
   out_8629437051351605834[110] = 0.5*state[4];
   out_8629437051351605834[111] = 0;
   out_8629437051351605834[112] = 0;
   out_8629437051351605834[113] = 0;
   out_8629437051351605834[114] = 0;
   out_8629437051351605834[115] = 0;
   out_8629437051351605834[116] = 0;
   out_8629437051351605834[117] = 0;
   out_8629437051351605834[118] = 0;
   out_8629437051351605834[119] = 0;
   out_8629437051351605834[120] = 0;
   out_8629437051351605834[121] = 0;
   out_8629437051351605834[122] = 0;
   out_8629437051351605834[123] = 0;
   out_8629437051351605834[124] = 0;
   out_8629437051351605834[125] = 0;
   out_8629437051351605834[126] = 0;
   out_8629437051351605834[127] = 0;
   out_8629437051351605834[128] = 0;
   out_8629437051351605834[129] = 0.5*state[5];
   out_8629437051351605834[130] = -0.5*state[4];
   out_8629437051351605834[131] = 0.5*state[3];
   out_8629437051351605834[132] = 0;
   out_8629437051351605834[133] = 0;
   out_8629437051351605834[134] = 0;
   out_8629437051351605834[135] = 0;
   out_8629437051351605834[136] = 0;
   out_8629437051351605834[137] = 0;
   out_8629437051351605834[138] = 0;
   out_8629437051351605834[139] = 0;
   out_8629437051351605834[140] = 0;
   out_8629437051351605834[141] = 0;
   out_8629437051351605834[142] = 0;
   out_8629437051351605834[143] = 0;
   out_8629437051351605834[144] = 0;
   out_8629437051351605834[145] = 0;
   out_8629437051351605834[146] = 0;
   out_8629437051351605834[147] = 0;
   out_8629437051351605834[148] = 0;
   out_8629437051351605834[149] = 0;
   out_8629437051351605834[150] = 0;
   out_8629437051351605834[151] = 0;
   out_8629437051351605834[152] = 0;
   out_8629437051351605834[153] = 1.0;
   out_8629437051351605834[154] = 0;
   out_8629437051351605834[155] = 0;
   out_8629437051351605834[156] = 0;
   out_8629437051351605834[157] = 0;
   out_8629437051351605834[158] = 0;
   out_8629437051351605834[159] = 0;
   out_8629437051351605834[160] = 0;
   out_8629437051351605834[161] = 0;
   out_8629437051351605834[162] = 0;
   out_8629437051351605834[163] = 0;
   out_8629437051351605834[164] = 0;
   out_8629437051351605834[165] = 0;
   out_8629437051351605834[166] = 0;
   out_8629437051351605834[167] = 0;
   out_8629437051351605834[168] = 0;
   out_8629437051351605834[169] = 0;
   out_8629437051351605834[170] = 0;
   out_8629437051351605834[171] = 0;
   out_8629437051351605834[172] = 0;
   out_8629437051351605834[173] = 0;
   out_8629437051351605834[174] = 0;
   out_8629437051351605834[175] = 1.0;
   out_8629437051351605834[176] = 0;
   out_8629437051351605834[177] = 0;
   out_8629437051351605834[178] = 0;
   out_8629437051351605834[179] = 0;
   out_8629437051351605834[180] = 0;
   out_8629437051351605834[181] = 0;
   out_8629437051351605834[182] = 0;
   out_8629437051351605834[183] = 0;
   out_8629437051351605834[184] = 0;
   out_8629437051351605834[185] = 0;
   out_8629437051351605834[186] = 0;
   out_8629437051351605834[187] = 0;
   out_8629437051351605834[188] = 0;
   out_8629437051351605834[189] = 0;
   out_8629437051351605834[190] = 0;
   out_8629437051351605834[191] = 0;
   out_8629437051351605834[192] = 0;
   out_8629437051351605834[193] = 0;
   out_8629437051351605834[194] = 0;
   out_8629437051351605834[195] = 0;
   out_8629437051351605834[196] = 0;
   out_8629437051351605834[197] = 1.0;
   out_8629437051351605834[198] = 0;
   out_8629437051351605834[199] = 0;
   out_8629437051351605834[200] = 0;
   out_8629437051351605834[201] = 0;
   out_8629437051351605834[202] = 0;
   out_8629437051351605834[203] = 0;
   out_8629437051351605834[204] = 0;
   out_8629437051351605834[205] = 0;
   out_8629437051351605834[206] = 0;
   out_8629437051351605834[207] = 0;
   out_8629437051351605834[208] = 0;
   out_8629437051351605834[209] = 0;
   out_8629437051351605834[210] = 0;
   out_8629437051351605834[211] = 0;
   out_8629437051351605834[212] = 0;
   out_8629437051351605834[213] = 0;
   out_8629437051351605834[214] = 0;
   out_8629437051351605834[215] = 0;
   out_8629437051351605834[216] = 0;
   out_8629437051351605834[217] = 0;
   out_8629437051351605834[218] = 0;
   out_8629437051351605834[219] = 1.0;
   out_8629437051351605834[220] = 0;
   out_8629437051351605834[221] = 0;
   out_8629437051351605834[222] = 0;
   out_8629437051351605834[223] = 0;
   out_8629437051351605834[224] = 0;
   out_8629437051351605834[225] = 0;
   out_8629437051351605834[226] = 0;
   out_8629437051351605834[227] = 0;
   out_8629437051351605834[228] = 0;
   out_8629437051351605834[229] = 0;
   out_8629437051351605834[230] = 0;
   out_8629437051351605834[231] = 0;
   out_8629437051351605834[232] = 0;
   out_8629437051351605834[233] = 0;
   out_8629437051351605834[234] = 0;
   out_8629437051351605834[235] = 0;
   out_8629437051351605834[236] = 0;
   out_8629437051351605834[237] = 0;
   out_8629437051351605834[238] = 0;
   out_8629437051351605834[239] = 0;
   out_8629437051351605834[240] = 0;
   out_8629437051351605834[241] = 1.0;
   out_8629437051351605834[242] = 0;
   out_8629437051351605834[243] = 0;
   out_8629437051351605834[244] = 0;
   out_8629437051351605834[245] = 0;
   out_8629437051351605834[246] = 0;
   out_8629437051351605834[247] = 0;
   out_8629437051351605834[248] = 0;
   out_8629437051351605834[249] = 0;
   out_8629437051351605834[250] = 0;
   out_8629437051351605834[251] = 0;
   out_8629437051351605834[252] = 0;
   out_8629437051351605834[253] = 0;
   out_8629437051351605834[254] = 0;
   out_8629437051351605834[255] = 0;
   out_8629437051351605834[256] = 0;
   out_8629437051351605834[257] = 0;
   out_8629437051351605834[258] = 0;
   out_8629437051351605834[259] = 0;
   out_8629437051351605834[260] = 0;
   out_8629437051351605834[261] = 0;
   out_8629437051351605834[262] = 0;
   out_8629437051351605834[263] = 1.0;
   out_8629437051351605834[264] = 0;
   out_8629437051351605834[265] = 0;
   out_8629437051351605834[266] = 0;
   out_8629437051351605834[267] = 0;
   out_8629437051351605834[268] = 0;
   out_8629437051351605834[269] = 0;
   out_8629437051351605834[270] = 0;
   out_8629437051351605834[271] = 0;
   out_8629437051351605834[272] = 0;
   out_8629437051351605834[273] = 0;
   out_8629437051351605834[274] = 0;
   out_8629437051351605834[275] = 0;
   out_8629437051351605834[276] = 0;
   out_8629437051351605834[277] = 0;
   out_8629437051351605834[278] = 0;
   out_8629437051351605834[279] = 0;
   out_8629437051351605834[280] = 0;
   out_8629437051351605834[281] = 0;
   out_8629437051351605834[282] = 0;
   out_8629437051351605834[283] = 0;
   out_8629437051351605834[284] = 0;
   out_8629437051351605834[285] = 1.0;
   out_8629437051351605834[286] = 0;
   out_8629437051351605834[287] = 0;
   out_8629437051351605834[288] = 0;
   out_8629437051351605834[289] = 0;
   out_8629437051351605834[290] = 0;
   out_8629437051351605834[291] = 0;
   out_8629437051351605834[292] = 0;
   out_8629437051351605834[293] = 0;
   out_8629437051351605834[294] = 0;
   out_8629437051351605834[295] = 0;
   out_8629437051351605834[296] = 0;
   out_8629437051351605834[297] = 0;
   out_8629437051351605834[298] = 0;
   out_8629437051351605834[299] = 0;
   out_8629437051351605834[300] = 0;
   out_8629437051351605834[301] = 0;
   out_8629437051351605834[302] = 0;
   out_8629437051351605834[303] = 0;
   out_8629437051351605834[304] = 0;
   out_8629437051351605834[305] = 0;
   out_8629437051351605834[306] = 0;
   out_8629437051351605834[307] = 1.0;
   out_8629437051351605834[308] = 0;
   out_8629437051351605834[309] = 0;
   out_8629437051351605834[310] = 0;
   out_8629437051351605834[311] = 0;
   out_8629437051351605834[312] = 0;
   out_8629437051351605834[313] = 0;
   out_8629437051351605834[314] = 0;
   out_8629437051351605834[315] = 0;
   out_8629437051351605834[316] = 0;
   out_8629437051351605834[317] = 0;
   out_8629437051351605834[318] = 0;
   out_8629437051351605834[319] = 0;
   out_8629437051351605834[320] = 0;
   out_8629437051351605834[321] = 0;
   out_8629437051351605834[322] = 0;
   out_8629437051351605834[323] = 0;
   out_8629437051351605834[324] = 0;
   out_8629437051351605834[325] = 0;
   out_8629437051351605834[326] = 0;
   out_8629437051351605834[327] = 0;
   out_8629437051351605834[328] = 0;
   out_8629437051351605834[329] = 1.0;
   out_8629437051351605834[330] = 0;
   out_8629437051351605834[331] = 0;
   out_8629437051351605834[332] = 0;
   out_8629437051351605834[333] = 0;
   out_8629437051351605834[334] = 0;
   out_8629437051351605834[335] = 0;
   out_8629437051351605834[336] = 0;
   out_8629437051351605834[337] = 0;
   out_8629437051351605834[338] = 0;
   out_8629437051351605834[339] = 0;
   out_8629437051351605834[340] = 0;
   out_8629437051351605834[341] = 0;
   out_8629437051351605834[342] = 0;
   out_8629437051351605834[343] = 0;
   out_8629437051351605834[344] = 0;
   out_8629437051351605834[345] = 0;
   out_8629437051351605834[346] = 0;
   out_8629437051351605834[347] = 0;
   out_8629437051351605834[348] = 0;
   out_8629437051351605834[349] = 0;
   out_8629437051351605834[350] = 0;
   out_8629437051351605834[351] = 1.0;
   out_8629437051351605834[352] = 0;
   out_8629437051351605834[353] = 0;
   out_8629437051351605834[354] = 0;
   out_8629437051351605834[355] = 0;
   out_8629437051351605834[356] = 0;
   out_8629437051351605834[357] = 0;
   out_8629437051351605834[358] = 0;
   out_8629437051351605834[359] = 0;
   out_8629437051351605834[360] = 0;
   out_8629437051351605834[361] = 0;
   out_8629437051351605834[362] = 0;
   out_8629437051351605834[363] = 0;
   out_8629437051351605834[364] = 0;
   out_8629437051351605834[365] = 0;
   out_8629437051351605834[366] = 0;
   out_8629437051351605834[367] = 0;
   out_8629437051351605834[368] = 0;
   out_8629437051351605834[369] = 0;
   out_8629437051351605834[370] = 0;
   out_8629437051351605834[371] = 0;
   out_8629437051351605834[372] = 0;
   out_8629437051351605834[373] = 1.0;
   out_8629437051351605834[374] = 0;
   out_8629437051351605834[375] = 0;
   out_8629437051351605834[376] = 0;
   out_8629437051351605834[377] = 0;
   out_8629437051351605834[378] = 0;
   out_8629437051351605834[379] = 0;
   out_8629437051351605834[380] = 0;
   out_8629437051351605834[381] = 0;
   out_8629437051351605834[382] = 0;
   out_8629437051351605834[383] = 0;
   out_8629437051351605834[384] = 0;
   out_8629437051351605834[385] = 0;
   out_8629437051351605834[386] = 0;
   out_8629437051351605834[387] = 0;
   out_8629437051351605834[388] = 0;
   out_8629437051351605834[389] = 0;
   out_8629437051351605834[390] = 0;
   out_8629437051351605834[391] = 0;
   out_8629437051351605834[392] = 0;
   out_8629437051351605834[393] = 0;
   out_8629437051351605834[394] = 0;
   out_8629437051351605834[395] = 1.0;
   out_8629437051351605834[396] = 0;
   out_8629437051351605834[397] = 0;
   out_8629437051351605834[398] = 0;
   out_8629437051351605834[399] = 0;
   out_8629437051351605834[400] = 0;
   out_8629437051351605834[401] = 0;
   out_8629437051351605834[402] = 0;
   out_8629437051351605834[403] = 0;
   out_8629437051351605834[404] = 0;
   out_8629437051351605834[405] = 0;
   out_8629437051351605834[406] = 0;
   out_8629437051351605834[407] = 0;
   out_8629437051351605834[408] = 0;
   out_8629437051351605834[409] = 0;
   out_8629437051351605834[410] = 0;
   out_8629437051351605834[411] = 0;
   out_8629437051351605834[412] = 0;
   out_8629437051351605834[413] = 0;
   out_8629437051351605834[414] = 0;
   out_8629437051351605834[415] = 0;
   out_8629437051351605834[416] = 0;
   out_8629437051351605834[417] = 1.0;
   out_8629437051351605834[418] = 0;
   out_8629437051351605834[419] = 0;
   out_8629437051351605834[420] = 0;
   out_8629437051351605834[421] = 0;
   out_8629437051351605834[422] = 0;
   out_8629437051351605834[423] = 0;
   out_8629437051351605834[424] = 0;
   out_8629437051351605834[425] = 0;
   out_8629437051351605834[426] = 0;
   out_8629437051351605834[427] = 0;
   out_8629437051351605834[428] = 0;
   out_8629437051351605834[429] = 0;
   out_8629437051351605834[430] = 0;
   out_8629437051351605834[431] = 0;
   out_8629437051351605834[432] = 0;
   out_8629437051351605834[433] = 0;
   out_8629437051351605834[434] = 0;
   out_8629437051351605834[435] = 0;
   out_8629437051351605834[436] = 0;
   out_8629437051351605834[437] = 0;
   out_8629437051351605834[438] = 0;
   out_8629437051351605834[439] = 1.0;
   out_8629437051351605834[440] = 0;
   out_8629437051351605834[441] = 0;
   out_8629437051351605834[442] = 0;
   out_8629437051351605834[443] = 0;
   out_8629437051351605834[444] = 0;
   out_8629437051351605834[445] = 0;
   out_8629437051351605834[446] = 0;
   out_8629437051351605834[447] = 0;
   out_8629437051351605834[448] = 0;
   out_8629437051351605834[449] = 0;
   out_8629437051351605834[450] = 0;
   out_8629437051351605834[451] = 0;
   out_8629437051351605834[452] = 0;
   out_8629437051351605834[453] = 0;
   out_8629437051351605834[454] = 0;
   out_8629437051351605834[455] = 0;
   out_8629437051351605834[456] = 0;
   out_8629437051351605834[457] = 0;
   out_8629437051351605834[458] = 0;
   out_8629437051351605834[459] = 0;
   out_8629437051351605834[460] = 0;
   out_8629437051351605834[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9119723707155781877) {
   out_9119723707155781877[0] = dt*state[7] + state[0];
   out_9119723707155781877[1] = dt*state[8] + state[1];
   out_9119723707155781877[2] = dt*state[9] + state[2];
   out_9119723707155781877[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9119723707155781877[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9119723707155781877[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9119723707155781877[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9119723707155781877[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9119723707155781877[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9119723707155781877[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9119723707155781877[10] = state[10];
   out_9119723707155781877[11] = state[11];
   out_9119723707155781877[12] = state[12];
   out_9119723707155781877[13] = state[13];
   out_9119723707155781877[14] = state[14];
   out_9119723707155781877[15] = state[15];
   out_9119723707155781877[16] = state[16];
   out_9119723707155781877[17] = state[17];
   out_9119723707155781877[18] = state[18];
   out_9119723707155781877[19] = state[19];
   out_9119723707155781877[20] = state[20];
   out_9119723707155781877[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2926342148693202044) {
   out_2926342148693202044[0] = 1;
   out_2926342148693202044[1] = 0;
   out_2926342148693202044[2] = 0;
   out_2926342148693202044[3] = 0;
   out_2926342148693202044[4] = 0;
   out_2926342148693202044[5] = 0;
   out_2926342148693202044[6] = dt;
   out_2926342148693202044[7] = 0;
   out_2926342148693202044[8] = 0;
   out_2926342148693202044[9] = 0;
   out_2926342148693202044[10] = 0;
   out_2926342148693202044[11] = 0;
   out_2926342148693202044[12] = 0;
   out_2926342148693202044[13] = 0;
   out_2926342148693202044[14] = 0;
   out_2926342148693202044[15] = 0;
   out_2926342148693202044[16] = 0;
   out_2926342148693202044[17] = 0;
   out_2926342148693202044[18] = 0;
   out_2926342148693202044[19] = 0;
   out_2926342148693202044[20] = 0;
   out_2926342148693202044[21] = 0;
   out_2926342148693202044[22] = 1;
   out_2926342148693202044[23] = 0;
   out_2926342148693202044[24] = 0;
   out_2926342148693202044[25] = 0;
   out_2926342148693202044[26] = 0;
   out_2926342148693202044[27] = 0;
   out_2926342148693202044[28] = dt;
   out_2926342148693202044[29] = 0;
   out_2926342148693202044[30] = 0;
   out_2926342148693202044[31] = 0;
   out_2926342148693202044[32] = 0;
   out_2926342148693202044[33] = 0;
   out_2926342148693202044[34] = 0;
   out_2926342148693202044[35] = 0;
   out_2926342148693202044[36] = 0;
   out_2926342148693202044[37] = 0;
   out_2926342148693202044[38] = 0;
   out_2926342148693202044[39] = 0;
   out_2926342148693202044[40] = 0;
   out_2926342148693202044[41] = 0;
   out_2926342148693202044[42] = 0;
   out_2926342148693202044[43] = 0;
   out_2926342148693202044[44] = 1;
   out_2926342148693202044[45] = 0;
   out_2926342148693202044[46] = 0;
   out_2926342148693202044[47] = 0;
   out_2926342148693202044[48] = 0;
   out_2926342148693202044[49] = 0;
   out_2926342148693202044[50] = dt;
   out_2926342148693202044[51] = 0;
   out_2926342148693202044[52] = 0;
   out_2926342148693202044[53] = 0;
   out_2926342148693202044[54] = 0;
   out_2926342148693202044[55] = 0;
   out_2926342148693202044[56] = 0;
   out_2926342148693202044[57] = 0;
   out_2926342148693202044[58] = 0;
   out_2926342148693202044[59] = 0;
   out_2926342148693202044[60] = 0;
   out_2926342148693202044[61] = 0;
   out_2926342148693202044[62] = 0;
   out_2926342148693202044[63] = 0;
   out_2926342148693202044[64] = 0;
   out_2926342148693202044[65] = 0;
   out_2926342148693202044[66] = 1;
   out_2926342148693202044[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2926342148693202044[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2926342148693202044[69] = 0;
   out_2926342148693202044[70] = 0;
   out_2926342148693202044[71] = 0;
   out_2926342148693202044[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2926342148693202044[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2926342148693202044[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2926342148693202044[75] = 0;
   out_2926342148693202044[76] = 0;
   out_2926342148693202044[77] = 0;
   out_2926342148693202044[78] = 0;
   out_2926342148693202044[79] = 0;
   out_2926342148693202044[80] = 0;
   out_2926342148693202044[81] = 0;
   out_2926342148693202044[82] = 0;
   out_2926342148693202044[83] = 0;
   out_2926342148693202044[84] = 0;
   out_2926342148693202044[85] = 0;
   out_2926342148693202044[86] = 0;
   out_2926342148693202044[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2926342148693202044[88] = 1;
   out_2926342148693202044[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2926342148693202044[90] = 0;
   out_2926342148693202044[91] = 0;
   out_2926342148693202044[92] = 0;
   out_2926342148693202044[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2926342148693202044[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2926342148693202044[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2926342148693202044[96] = 0;
   out_2926342148693202044[97] = 0;
   out_2926342148693202044[98] = 0;
   out_2926342148693202044[99] = 0;
   out_2926342148693202044[100] = 0;
   out_2926342148693202044[101] = 0;
   out_2926342148693202044[102] = 0;
   out_2926342148693202044[103] = 0;
   out_2926342148693202044[104] = 0;
   out_2926342148693202044[105] = 0;
   out_2926342148693202044[106] = 0;
   out_2926342148693202044[107] = 0;
   out_2926342148693202044[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2926342148693202044[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2926342148693202044[110] = 1;
   out_2926342148693202044[111] = 0;
   out_2926342148693202044[112] = 0;
   out_2926342148693202044[113] = 0;
   out_2926342148693202044[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2926342148693202044[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2926342148693202044[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2926342148693202044[117] = 0;
   out_2926342148693202044[118] = 0;
   out_2926342148693202044[119] = 0;
   out_2926342148693202044[120] = 0;
   out_2926342148693202044[121] = 0;
   out_2926342148693202044[122] = 0;
   out_2926342148693202044[123] = 0;
   out_2926342148693202044[124] = 0;
   out_2926342148693202044[125] = 0;
   out_2926342148693202044[126] = 0;
   out_2926342148693202044[127] = 0;
   out_2926342148693202044[128] = 0;
   out_2926342148693202044[129] = 0;
   out_2926342148693202044[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2926342148693202044[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2926342148693202044[132] = 1;
   out_2926342148693202044[133] = 0;
   out_2926342148693202044[134] = 0;
   out_2926342148693202044[135] = 0;
   out_2926342148693202044[136] = 0;
   out_2926342148693202044[137] = 0;
   out_2926342148693202044[138] = 0;
   out_2926342148693202044[139] = 0;
   out_2926342148693202044[140] = 0;
   out_2926342148693202044[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2926342148693202044[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2926342148693202044[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2926342148693202044[144] = 0;
   out_2926342148693202044[145] = 0;
   out_2926342148693202044[146] = 0;
   out_2926342148693202044[147] = 0;
   out_2926342148693202044[148] = 0;
   out_2926342148693202044[149] = 0;
   out_2926342148693202044[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2926342148693202044[151] = 0;
   out_2926342148693202044[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2926342148693202044[153] = 0;
   out_2926342148693202044[154] = 1;
   out_2926342148693202044[155] = 0;
   out_2926342148693202044[156] = 0;
   out_2926342148693202044[157] = 0;
   out_2926342148693202044[158] = 0;
   out_2926342148693202044[159] = 0;
   out_2926342148693202044[160] = 0;
   out_2926342148693202044[161] = 0;
   out_2926342148693202044[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2926342148693202044[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2926342148693202044[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2926342148693202044[165] = 0;
   out_2926342148693202044[166] = 0;
   out_2926342148693202044[167] = 0;
   out_2926342148693202044[168] = 0;
   out_2926342148693202044[169] = 0;
   out_2926342148693202044[170] = 0;
   out_2926342148693202044[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2926342148693202044[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2926342148693202044[173] = 0;
   out_2926342148693202044[174] = 0;
   out_2926342148693202044[175] = 0;
   out_2926342148693202044[176] = 1;
   out_2926342148693202044[177] = 0;
   out_2926342148693202044[178] = 0;
   out_2926342148693202044[179] = 0;
   out_2926342148693202044[180] = 0;
   out_2926342148693202044[181] = 0;
   out_2926342148693202044[182] = 0;
   out_2926342148693202044[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2926342148693202044[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2926342148693202044[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2926342148693202044[186] = 0;
   out_2926342148693202044[187] = 0;
   out_2926342148693202044[188] = 0;
   out_2926342148693202044[189] = 0;
   out_2926342148693202044[190] = 0;
   out_2926342148693202044[191] = 0;
   out_2926342148693202044[192] = 0;
   out_2926342148693202044[193] = 0;
   out_2926342148693202044[194] = 0;
   out_2926342148693202044[195] = 0;
   out_2926342148693202044[196] = 0;
   out_2926342148693202044[197] = 0;
   out_2926342148693202044[198] = 1;
   out_2926342148693202044[199] = 0;
   out_2926342148693202044[200] = 0;
   out_2926342148693202044[201] = 0;
   out_2926342148693202044[202] = 0;
   out_2926342148693202044[203] = 0;
   out_2926342148693202044[204] = 0;
   out_2926342148693202044[205] = 0;
   out_2926342148693202044[206] = 0;
   out_2926342148693202044[207] = 0;
   out_2926342148693202044[208] = 0;
   out_2926342148693202044[209] = 0;
   out_2926342148693202044[210] = 0;
   out_2926342148693202044[211] = 0;
   out_2926342148693202044[212] = 0;
   out_2926342148693202044[213] = 0;
   out_2926342148693202044[214] = 0;
   out_2926342148693202044[215] = 0;
   out_2926342148693202044[216] = 0;
   out_2926342148693202044[217] = 0;
   out_2926342148693202044[218] = 0;
   out_2926342148693202044[219] = 0;
   out_2926342148693202044[220] = 1;
   out_2926342148693202044[221] = 0;
   out_2926342148693202044[222] = 0;
   out_2926342148693202044[223] = 0;
   out_2926342148693202044[224] = 0;
   out_2926342148693202044[225] = 0;
   out_2926342148693202044[226] = 0;
   out_2926342148693202044[227] = 0;
   out_2926342148693202044[228] = 0;
   out_2926342148693202044[229] = 0;
   out_2926342148693202044[230] = 0;
   out_2926342148693202044[231] = 0;
   out_2926342148693202044[232] = 0;
   out_2926342148693202044[233] = 0;
   out_2926342148693202044[234] = 0;
   out_2926342148693202044[235] = 0;
   out_2926342148693202044[236] = 0;
   out_2926342148693202044[237] = 0;
   out_2926342148693202044[238] = 0;
   out_2926342148693202044[239] = 0;
   out_2926342148693202044[240] = 0;
   out_2926342148693202044[241] = 0;
   out_2926342148693202044[242] = 1;
   out_2926342148693202044[243] = 0;
   out_2926342148693202044[244] = 0;
   out_2926342148693202044[245] = 0;
   out_2926342148693202044[246] = 0;
   out_2926342148693202044[247] = 0;
   out_2926342148693202044[248] = 0;
   out_2926342148693202044[249] = 0;
   out_2926342148693202044[250] = 0;
   out_2926342148693202044[251] = 0;
   out_2926342148693202044[252] = 0;
   out_2926342148693202044[253] = 0;
   out_2926342148693202044[254] = 0;
   out_2926342148693202044[255] = 0;
   out_2926342148693202044[256] = 0;
   out_2926342148693202044[257] = 0;
   out_2926342148693202044[258] = 0;
   out_2926342148693202044[259] = 0;
   out_2926342148693202044[260] = 0;
   out_2926342148693202044[261] = 0;
   out_2926342148693202044[262] = 0;
   out_2926342148693202044[263] = 0;
   out_2926342148693202044[264] = 1;
   out_2926342148693202044[265] = 0;
   out_2926342148693202044[266] = 0;
   out_2926342148693202044[267] = 0;
   out_2926342148693202044[268] = 0;
   out_2926342148693202044[269] = 0;
   out_2926342148693202044[270] = 0;
   out_2926342148693202044[271] = 0;
   out_2926342148693202044[272] = 0;
   out_2926342148693202044[273] = 0;
   out_2926342148693202044[274] = 0;
   out_2926342148693202044[275] = 0;
   out_2926342148693202044[276] = 0;
   out_2926342148693202044[277] = 0;
   out_2926342148693202044[278] = 0;
   out_2926342148693202044[279] = 0;
   out_2926342148693202044[280] = 0;
   out_2926342148693202044[281] = 0;
   out_2926342148693202044[282] = 0;
   out_2926342148693202044[283] = 0;
   out_2926342148693202044[284] = 0;
   out_2926342148693202044[285] = 0;
   out_2926342148693202044[286] = 1;
   out_2926342148693202044[287] = 0;
   out_2926342148693202044[288] = 0;
   out_2926342148693202044[289] = 0;
   out_2926342148693202044[290] = 0;
   out_2926342148693202044[291] = 0;
   out_2926342148693202044[292] = 0;
   out_2926342148693202044[293] = 0;
   out_2926342148693202044[294] = 0;
   out_2926342148693202044[295] = 0;
   out_2926342148693202044[296] = 0;
   out_2926342148693202044[297] = 0;
   out_2926342148693202044[298] = 0;
   out_2926342148693202044[299] = 0;
   out_2926342148693202044[300] = 0;
   out_2926342148693202044[301] = 0;
   out_2926342148693202044[302] = 0;
   out_2926342148693202044[303] = 0;
   out_2926342148693202044[304] = 0;
   out_2926342148693202044[305] = 0;
   out_2926342148693202044[306] = 0;
   out_2926342148693202044[307] = 0;
   out_2926342148693202044[308] = 1;
   out_2926342148693202044[309] = 0;
   out_2926342148693202044[310] = 0;
   out_2926342148693202044[311] = 0;
   out_2926342148693202044[312] = 0;
   out_2926342148693202044[313] = 0;
   out_2926342148693202044[314] = 0;
   out_2926342148693202044[315] = 0;
   out_2926342148693202044[316] = 0;
   out_2926342148693202044[317] = 0;
   out_2926342148693202044[318] = 0;
   out_2926342148693202044[319] = 0;
   out_2926342148693202044[320] = 0;
   out_2926342148693202044[321] = 0;
   out_2926342148693202044[322] = 0;
   out_2926342148693202044[323] = 0;
   out_2926342148693202044[324] = 0;
   out_2926342148693202044[325] = 0;
   out_2926342148693202044[326] = 0;
   out_2926342148693202044[327] = 0;
   out_2926342148693202044[328] = 0;
   out_2926342148693202044[329] = 0;
   out_2926342148693202044[330] = 1;
   out_2926342148693202044[331] = 0;
   out_2926342148693202044[332] = 0;
   out_2926342148693202044[333] = 0;
   out_2926342148693202044[334] = 0;
   out_2926342148693202044[335] = 0;
   out_2926342148693202044[336] = 0;
   out_2926342148693202044[337] = 0;
   out_2926342148693202044[338] = 0;
   out_2926342148693202044[339] = 0;
   out_2926342148693202044[340] = 0;
   out_2926342148693202044[341] = 0;
   out_2926342148693202044[342] = 0;
   out_2926342148693202044[343] = 0;
   out_2926342148693202044[344] = 0;
   out_2926342148693202044[345] = 0;
   out_2926342148693202044[346] = 0;
   out_2926342148693202044[347] = 0;
   out_2926342148693202044[348] = 0;
   out_2926342148693202044[349] = 0;
   out_2926342148693202044[350] = 0;
   out_2926342148693202044[351] = 0;
   out_2926342148693202044[352] = 1;
   out_2926342148693202044[353] = 0;
   out_2926342148693202044[354] = 0;
   out_2926342148693202044[355] = 0;
   out_2926342148693202044[356] = 0;
   out_2926342148693202044[357] = 0;
   out_2926342148693202044[358] = 0;
   out_2926342148693202044[359] = 0;
   out_2926342148693202044[360] = 0;
   out_2926342148693202044[361] = 0;
   out_2926342148693202044[362] = 0;
   out_2926342148693202044[363] = 0;
   out_2926342148693202044[364] = 0;
   out_2926342148693202044[365] = 0;
   out_2926342148693202044[366] = 0;
   out_2926342148693202044[367] = 0;
   out_2926342148693202044[368] = 0;
   out_2926342148693202044[369] = 0;
   out_2926342148693202044[370] = 0;
   out_2926342148693202044[371] = 0;
   out_2926342148693202044[372] = 0;
   out_2926342148693202044[373] = 0;
   out_2926342148693202044[374] = 1;
   out_2926342148693202044[375] = 0;
   out_2926342148693202044[376] = 0;
   out_2926342148693202044[377] = 0;
   out_2926342148693202044[378] = 0;
   out_2926342148693202044[379] = 0;
   out_2926342148693202044[380] = 0;
   out_2926342148693202044[381] = 0;
   out_2926342148693202044[382] = 0;
   out_2926342148693202044[383] = 0;
   out_2926342148693202044[384] = 0;
   out_2926342148693202044[385] = 0;
   out_2926342148693202044[386] = 0;
   out_2926342148693202044[387] = 0;
   out_2926342148693202044[388] = 0;
   out_2926342148693202044[389] = 0;
   out_2926342148693202044[390] = 0;
   out_2926342148693202044[391] = 0;
   out_2926342148693202044[392] = 0;
   out_2926342148693202044[393] = 0;
   out_2926342148693202044[394] = 0;
   out_2926342148693202044[395] = 0;
   out_2926342148693202044[396] = 1;
   out_2926342148693202044[397] = 0;
   out_2926342148693202044[398] = 0;
   out_2926342148693202044[399] = 0;
   out_2926342148693202044[400] = 0;
   out_2926342148693202044[401] = 0;
   out_2926342148693202044[402] = 0;
   out_2926342148693202044[403] = 0;
   out_2926342148693202044[404] = 0;
   out_2926342148693202044[405] = 0;
   out_2926342148693202044[406] = 0;
   out_2926342148693202044[407] = 0;
   out_2926342148693202044[408] = 0;
   out_2926342148693202044[409] = 0;
   out_2926342148693202044[410] = 0;
   out_2926342148693202044[411] = 0;
   out_2926342148693202044[412] = 0;
   out_2926342148693202044[413] = 0;
   out_2926342148693202044[414] = 0;
   out_2926342148693202044[415] = 0;
   out_2926342148693202044[416] = 0;
   out_2926342148693202044[417] = 0;
   out_2926342148693202044[418] = 1;
   out_2926342148693202044[419] = 0;
   out_2926342148693202044[420] = 0;
   out_2926342148693202044[421] = 0;
   out_2926342148693202044[422] = 0;
   out_2926342148693202044[423] = 0;
   out_2926342148693202044[424] = 0;
   out_2926342148693202044[425] = 0;
   out_2926342148693202044[426] = 0;
   out_2926342148693202044[427] = 0;
   out_2926342148693202044[428] = 0;
   out_2926342148693202044[429] = 0;
   out_2926342148693202044[430] = 0;
   out_2926342148693202044[431] = 0;
   out_2926342148693202044[432] = 0;
   out_2926342148693202044[433] = 0;
   out_2926342148693202044[434] = 0;
   out_2926342148693202044[435] = 0;
   out_2926342148693202044[436] = 0;
   out_2926342148693202044[437] = 0;
   out_2926342148693202044[438] = 0;
   out_2926342148693202044[439] = 0;
   out_2926342148693202044[440] = 1;
}
void h_4(double *state, double *unused, double *out_122350829928085436) {
   out_122350829928085436[0] = state[10] + state[13];
   out_122350829928085436[1] = state[11] + state[14];
   out_122350829928085436[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3125739590203371811) {
   out_3125739590203371811[0] = 0;
   out_3125739590203371811[1] = 0;
   out_3125739590203371811[2] = 0;
   out_3125739590203371811[3] = 0;
   out_3125739590203371811[4] = 0;
   out_3125739590203371811[5] = 0;
   out_3125739590203371811[6] = 0;
   out_3125739590203371811[7] = 0;
   out_3125739590203371811[8] = 0;
   out_3125739590203371811[9] = 0;
   out_3125739590203371811[10] = 1;
   out_3125739590203371811[11] = 0;
   out_3125739590203371811[12] = 0;
   out_3125739590203371811[13] = 1;
   out_3125739590203371811[14] = 0;
   out_3125739590203371811[15] = 0;
   out_3125739590203371811[16] = 0;
   out_3125739590203371811[17] = 0;
   out_3125739590203371811[18] = 0;
   out_3125739590203371811[19] = 0;
   out_3125739590203371811[20] = 0;
   out_3125739590203371811[21] = 0;
   out_3125739590203371811[22] = 0;
   out_3125739590203371811[23] = 0;
   out_3125739590203371811[24] = 0;
   out_3125739590203371811[25] = 0;
   out_3125739590203371811[26] = 0;
   out_3125739590203371811[27] = 0;
   out_3125739590203371811[28] = 0;
   out_3125739590203371811[29] = 0;
   out_3125739590203371811[30] = 0;
   out_3125739590203371811[31] = 0;
   out_3125739590203371811[32] = 0;
   out_3125739590203371811[33] = 1;
   out_3125739590203371811[34] = 0;
   out_3125739590203371811[35] = 0;
   out_3125739590203371811[36] = 1;
   out_3125739590203371811[37] = 0;
   out_3125739590203371811[38] = 0;
   out_3125739590203371811[39] = 0;
   out_3125739590203371811[40] = 0;
   out_3125739590203371811[41] = 0;
   out_3125739590203371811[42] = 0;
   out_3125739590203371811[43] = 0;
   out_3125739590203371811[44] = 0;
   out_3125739590203371811[45] = 0;
   out_3125739590203371811[46] = 0;
   out_3125739590203371811[47] = 0;
   out_3125739590203371811[48] = 0;
   out_3125739590203371811[49] = 0;
   out_3125739590203371811[50] = 0;
   out_3125739590203371811[51] = 0;
   out_3125739590203371811[52] = 0;
   out_3125739590203371811[53] = 0;
   out_3125739590203371811[54] = 0;
   out_3125739590203371811[55] = 0;
   out_3125739590203371811[56] = 1;
   out_3125739590203371811[57] = 0;
   out_3125739590203371811[58] = 0;
   out_3125739590203371811[59] = 1;
   out_3125739590203371811[60] = 0;
   out_3125739590203371811[61] = 0;
   out_3125739590203371811[62] = 0;
   out_3125739590203371811[63] = 0;
   out_3125739590203371811[64] = 0;
   out_3125739590203371811[65] = 0;
}
void h_9(double *state, double *unused, double *out_3706110223310072950) {
   out_3706110223310072950[0] = state[10];
   out_3706110223310072950[1] = state[11];
   out_3706110223310072950[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4161479345061075659) {
   out_4161479345061075659[0] = 0;
   out_4161479345061075659[1] = 0;
   out_4161479345061075659[2] = 0;
   out_4161479345061075659[3] = 0;
   out_4161479345061075659[4] = 0;
   out_4161479345061075659[5] = 0;
   out_4161479345061075659[6] = 0;
   out_4161479345061075659[7] = 0;
   out_4161479345061075659[8] = 0;
   out_4161479345061075659[9] = 0;
   out_4161479345061075659[10] = 1;
   out_4161479345061075659[11] = 0;
   out_4161479345061075659[12] = 0;
   out_4161479345061075659[13] = 0;
   out_4161479345061075659[14] = 0;
   out_4161479345061075659[15] = 0;
   out_4161479345061075659[16] = 0;
   out_4161479345061075659[17] = 0;
   out_4161479345061075659[18] = 0;
   out_4161479345061075659[19] = 0;
   out_4161479345061075659[20] = 0;
   out_4161479345061075659[21] = 0;
   out_4161479345061075659[22] = 0;
   out_4161479345061075659[23] = 0;
   out_4161479345061075659[24] = 0;
   out_4161479345061075659[25] = 0;
   out_4161479345061075659[26] = 0;
   out_4161479345061075659[27] = 0;
   out_4161479345061075659[28] = 0;
   out_4161479345061075659[29] = 0;
   out_4161479345061075659[30] = 0;
   out_4161479345061075659[31] = 0;
   out_4161479345061075659[32] = 0;
   out_4161479345061075659[33] = 1;
   out_4161479345061075659[34] = 0;
   out_4161479345061075659[35] = 0;
   out_4161479345061075659[36] = 0;
   out_4161479345061075659[37] = 0;
   out_4161479345061075659[38] = 0;
   out_4161479345061075659[39] = 0;
   out_4161479345061075659[40] = 0;
   out_4161479345061075659[41] = 0;
   out_4161479345061075659[42] = 0;
   out_4161479345061075659[43] = 0;
   out_4161479345061075659[44] = 0;
   out_4161479345061075659[45] = 0;
   out_4161479345061075659[46] = 0;
   out_4161479345061075659[47] = 0;
   out_4161479345061075659[48] = 0;
   out_4161479345061075659[49] = 0;
   out_4161479345061075659[50] = 0;
   out_4161479345061075659[51] = 0;
   out_4161479345061075659[52] = 0;
   out_4161479345061075659[53] = 0;
   out_4161479345061075659[54] = 0;
   out_4161479345061075659[55] = 0;
   out_4161479345061075659[56] = 1;
   out_4161479345061075659[57] = 0;
   out_4161479345061075659[58] = 0;
   out_4161479345061075659[59] = 0;
   out_4161479345061075659[60] = 0;
   out_4161479345061075659[61] = 0;
   out_4161479345061075659[62] = 0;
   out_4161479345061075659[63] = 0;
   out_4161479345061075659[64] = 0;
   out_4161479345061075659[65] = 0;
}
void h_10(double *state, double *unused, double *out_1500255286745539056) {
   out_1500255286745539056[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1500255286745539056[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1500255286745539056[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_58979021465123944) {
   out_58979021465123944[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_58979021465123944[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_58979021465123944[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_58979021465123944[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_58979021465123944[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_58979021465123944[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_58979021465123944[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_58979021465123944[7] = 0;
   out_58979021465123944[8] = 0;
   out_58979021465123944[9] = 0;
   out_58979021465123944[10] = 0;
   out_58979021465123944[11] = 0;
   out_58979021465123944[12] = 0;
   out_58979021465123944[13] = 0;
   out_58979021465123944[14] = 0;
   out_58979021465123944[15] = 0;
   out_58979021465123944[16] = 1;
   out_58979021465123944[17] = 0;
   out_58979021465123944[18] = 0;
   out_58979021465123944[19] = 1;
   out_58979021465123944[20] = 0;
   out_58979021465123944[21] = 0;
   out_58979021465123944[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_58979021465123944[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_58979021465123944[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_58979021465123944[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_58979021465123944[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_58979021465123944[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_58979021465123944[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_58979021465123944[29] = 0;
   out_58979021465123944[30] = 0;
   out_58979021465123944[31] = 0;
   out_58979021465123944[32] = 0;
   out_58979021465123944[33] = 0;
   out_58979021465123944[34] = 0;
   out_58979021465123944[35] = 0;
   out_58979021465123944[36] = 0;
   out_58979021465123944[37] = 0;
   out_58979021465123944[38] = 0;
   out_58979021465123944[39] = 1;
   out_58979021465123944[40] = 0;
   out_58979021465123944[41] = 0;
   out_58979021465123944[42] = 1;
   out_58979021465123944[43] = 0;
   out_58979021465123944[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_58979021465123944[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_58979021465123944[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_58979021465123944[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_58979021465123944[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_58979021465123944[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_58979021465123944[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_58979021465123944[51] = 0;
   out_58979021465123944[52] = 0;
   out_58979021465123944[53] = 0;
   out_58979021465123944[54] = 0;
   out_58979021465123944[55] = 0;
   out_58979021465123944[56] = 0;
   out_58979021465123944[57] = 0;
   out_58979021465123944[58] = 0;
   out_58979021465123944[59] = 0;
   out_58979021465123944[60] = 0;
   out_58979021465123944[61] = 0;
   out_58979021465123944[62] = 1;
   out_58979021465123944[63] = 0;
   out_58979021465123944[64] = 0;
   out_58979021465123944[65] = 1;
}
void h_12(double *state, double *unused, double *out_6311704777123009525) {
   out_6311704777123009525[0] = state[0];
   out_6311704777123009525[1] = state[1];
   out_6311704777123009525[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8939746106463446809) {
   out_8939746106463446809[0] = 1;
   out_8939746106463446809[1] = 0;
   out_8939746106463446809[2] = 0;
   out_8939746106463446809[3] = 0;
   out_8939746106463446809[4] = 0;
   out_8939746106463446809[5] = 0;
   out_8939746106463446809[6] = 0;
   out_8939746106463446809[7] = 0;
   out_8939746106463446809[8] = 0;
   out_8939746106463446809[9] = 0;
   out_8939746106463446809[10] = 0;
   out_8939746106463446809[11] = 0;
   out_8939746106463446809[12] = 0;
   out_8939746106463446809[13] = 0;
   out_8939746106463446809[14] = 0;
   out_8939746106463446809[15] = 0;
   out_8939746106463446809[16] = 0;
   out_8939746106463446809[17] = 0;
   out_8939746106463446809[18] = 0;
   out_8939746106463446809[19] = 0;
   out_8939746106463446809[20] = 0;
   out_8939746106463446809[21] = 0;
   out_8939746106463446809[22] = 0;
   out_8939746106463446809[23] = 1;
   out_8939746106463446809[24] = 0;
   out_8939746106463446809[25] = 0;
   out_8939746106463446809[26] = 0;
   out_8939746106463446809[27] = 0;
   out_8939746106463446809[28] = 0;
   out_8939746106463446809[29] = 0;
   out_8939746106463446809[30] = 0;
   out_8939746106463446809[31] = 0;
   out_8939746106463446809[32] = 0;
   out_8939746106463446809[33] = 0;
   out_8939746106463446809[34] = 0;
   out_8939746106463446809[35] = 0;
   out_8939746106463446809[36] = 0;
   out_8939746106463446809[37] = 0;
   out_8939746106463446809[38] = 0;
   out_8939746106463446809[39] = 0;
   out_8939746106463446809[40] = 0;
   out_8939746106463446809[41] = 0;
   out_8939746106463446809[42] = 0;
   out_8939746106463446809[43] = 0;
   out_8939746106463446809[44] = 0;
   out_8939746106463446809[45] = 0;
   out_8939746106463446809[46] = 1;
   out_8939746106463446809[47] = 0;
   out_8939746106463446809[48] = 0;
   out_8939746106463446809[49] = 0;
   out_8939746106463446809[50] = 0;
   out_8939746106463446809[51] = 0;
   out_8939746106463446809[52] = 0;
   out_8939746106463446809[53] = 0;
   out_8939746106463446809[54] = 0;
   out_8939746106463446809[55] = 0;
   out_8939746106463446809[56] = 0;
   out_8939746106463446809[57] = 0;
   out_8939746106463446809[58] = 0;
   out_8939746106463446809[59] = 0;
   out_8939746106463446809[60] = 0;
   out_8939746106463446809[61] = 0;
   out_8939746106463446809[62] = 0;
   out_8939746106463446809[63] = 0;
   out_8939746106463446809[64] = 0;
   out_8939746106463446809[65] = 0;
}
void h_35(double *state, double *unused, double *out_3352441690342662506) {
   out_3352441690342662506[0] = state[7];
   out_3352441690342662506[1] = state[8];
   out_3352441690342662506[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6761434934921091098) {
   out_6761434934921091098[0] = 0;
   out_6761434934921091098[1] = 0;
   out_6761434934921091098[2] = 0;
   out_6761434934921091098[3] = 0;
   out_6761434934921091098[4] = 0;
   out_6761434934921091098[5] = 0;
   out_6761434934921091098[6] = 0;
   out_6761434934921091098[7] = 1;
   out_6761434934921091098[8] = 0;
   out_6761434934921091098[9] = 0;
   out_6761434934921091098[10] = 0;
   out_6761434934921091098[11] = 0;
   out_6761434934921091098[12] = 0;
   out_6761434934921091098[13] = 0;
   out_6761434934921091098[14] = 0;
   out_6761434934921091098[15] = 0;
   out_6761434934921091098[16] = 0;
   out_6761434934921091098[17] = 0;
   out_6761434934921091098[18] = 0;
   out_6761434934921091098[19] = 0;
   out_6761434934921091098[20] = 0;
   out_6761434934921091098[21] = 0;
   out_6761434934921091098[22] = 0;
   out_6761434934921091098[23] = 0;
   out_6761434934921091098[24] = 0;
   out_6761434934921091098[25] = 0;
   out_6761434934921091098[26] = 0;
   out_6761434934921091098[27] = 0;
   out_6761434934921091098[28] = 0;
   out_6761434934921091098[29] = 0;
   out_6761434934921091098[30] = 1;
   out_6761434934921091098[31] = 0;
   out_6761434934921091098[32] = 0;
   out_6761434934921091098[33] = 0;
   out_6761434934921091098[34] = 0;
   out_6761434934921091098[35] = 0;
   out_6761434934921091098[36] = 0;
   out_6761434934921091098[37] = 0;
   out_6761434934921091098[38] = 0;
   out_6761434934921091098[39] = 0;
   out_6761434934921091098[40] = 0;
   out_6761434934921091098[41] = 0;
   out_6761434934921091098[42] = 0;
   out_6761434934921091098[43] = 0;
   out_6761434934921091098[44] = 0;
   out_6761434934921091098[45] = 0;
   out_6761434934921091098[46] = 0;
   out_6761434934921091098[47] = 0;
   out_6761434934921091098[48] = 0;
   out_6761434934921091098[49] = 0;
   out_6761434934921091098[50] = 0;
   out_6761434934921091098[51] = 0;
   out_6761434934921091098[52] = 0;
   out_6761434934921091098[53] = 1;
   out_6761434934921091098[54] = 0;
   out_6761434934921091098[55] = 0;
   out_6761434934921091098[56] = 0;
   out_6761434934921091098[57] = 0;
   out_6761434934921091098[58] = 0;
   out_6761434934921091098[59] = 0;
   out_6761434934921091098[60] = 0;
   out_6761434934921091098[61] = 0;
   out_6761434934921091098[62] = 0;
   out_6761434934921091098[63] = 0;
   out_6761434934921091098[64] = 0;
   out_6761434934921091098[65] = 0;
}
void h_32(double *state, double *unused, double *out_4786345732318478291) {
   out_4786345732318478291[0] = state[3];
   out_4786345732318478291[1] = state[4];
   out_4786345732318478291[2] = state[5];
   out_4786345732318478291[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8798827715940006022) {
   out_8798827715940006022[0] = 0;
   out_8798827715940006022[1] = 0;
   out_8798827715940006022[2] = 0;
   out_8798827715940006022[3] = 1;
   out_8798827715940006022[4] = 0;
   out_8798827715940006022[5] = 0;
   out_8798827715940006022[6] = 0;
   out_8798827715940006022[7] = 0;
   out_8798827715940006022[8] = 0;
   out_8798827715940006022[9] = 0;
   out_8798827715940006022[10] = 0;
   out_8798827715940006022[11] = 0;
   out_8798827715940006022[12] = 0;
   out_8798827715940006022[13] = 0;
   out_8798827715940006022[14] = 0;
   out_8798827715940006022[15] = 0;
   out_8798827715940006022[16] = 0;
   out_8798827715940006022[17] = 0;
   out_8798827715940006022[18] = 0;
   out_8798827715940006022[19] = 0;
   out_8798827715940006022[20] = 0;
   out_8798827715940006022[21] = 0;
   out_8798827715940006022[22] = 0;
   out_8798827715940006022[23] = 0;
   out_8798827715940006022[24] = 0;
   out_8798827715940006022[25] = 0;
   out_8798827715940006022[26] = 1;
   out_8798827715940006022[27] = 0;
   out_8798827715940006022[28] = 0;
   out_8798827715940006022[29] = 0;
   out_8798827715940006022[30] = 0;
   out_8798827715940006022[31] = 0;
   out_8798827715940006022[32] = 0;
   out_8798827715940006022[33] = 0;
   out_8798827715940006022[34] = 0;
   out_8798827715940006022[35] = 0;
   out_8798827715940006022[36] = 0;
   out_8798827715940006022[37] = 0;
   out_8798827715940006022[38] = 0;
   out_8798827715940006022[39] = 0;
   out_8798827715940006022[40] = 0;
   out_8798827715940006022[41] = 0;
   out_8798827715940006022[42] = 0;
   out_8798827715940006022[43] = 0;
   out_8798827715940006022[44] = 0;
   out_8798827715940006022[45] = 0;
   out_8798827715940006022[46] = 0;
   out_8798827715940006022[47] = 0;
   out_8798827715940006022[48] = 0;
   out_8798827715940006022[49] = 1;
   out_8798827715940006022[50] = 0;
   out_8798827715940006022[51] = 0;
   out_8798827715940006022[52] = 0;
   out_8798827715940006022[53] = 0;
   out_8798827715940006022[54] = 0;
   out_8798827715940006022[55] = 0;
   out_8798827715940006022[56] = 0;
   out_8798827715940006022[57] = 0;
   out_8798827715940006022[58] = 0;
   out_8798827715940006022[59] = 0;
   out_8798827715940006022[60] = 0;
   out_8798827715940006022[61] = 0;
   out_8798827715940006022[62] = 0;
   out_8798827715940006022[63] = 0;
   out_8798827715940006022[64] = 0;
   out_8798827715940006022[65] = 0;
   out_8798827715940006022[66] = 0;
   out_8798827715940006022[67] = 0;
   out_8798827715940006022[68] = 0;
   out_8798827715940006022[69] = 0;
   out_8798827715940006022[70] = 0;
   out_8798827715940006022[71] = 0;
   out_8798827715940006022[72] = 1;
   out_8798827715940006022[73] = 0;
   out_8798827715940006022[74] = 0;
   out_8798827715940006022[75] = 0;
   out_8798827715940006022[76] = 0;
   out_8798827715940006022[77] = 0;
   out_8798827715940006022[78] = 0;
   out_8798827715940006022[79] = 0;
   out_8798827715940006022[80] = 0;
   out_8798827715940006022[81] = 0;
   out_8798827715940006022[82] = 0;
   out_8798827715940006022[83] = 0;
   out_8798827715940006022[84] = 0;
   out_8798827715940006022[85] = 0;
   out_8798827715940006022[86] = 0;
   out_8798827715940006022[87] = 0;
}
void h_13(double *state, double *unused, double *out_1755976025828354517) {
   out_1755976025828354517[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1755976025828354517[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1755976025828354517[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4270406951243891899) {
   out_4270406951243891899[0] = 0;
   out_4270406951243891899[1] = 0;
   out_4270406951243891899[2] = 0;
   out_4270406951243891899[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4270406951243891899[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4270406951243891899[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4270406951243891899[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4270406951243891899[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4270406951243891899[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4270406951243891899[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4270406951243891899[10] = 0;
   out_4270406951243891899[11] = 0;
   out_4270406951243891899[12] = 0;
   out_4270406951243891899[13] = 0;
   out_4270406951243891899[14] = 0;
   out_4270406951243891899[15] = 0;
   out_4270406951243891899[16] = 0;
   out_4270406951243891899[17] = 0;
   out_4270406951243891899[18] = 0;
   out_4270406951243891899[19] = 0;
   out_4270406951243891899[20] = 0;
   out_4270406951243891899[21] = 0;
   out_4270406951243891899[22] = 0;
   out_4270406951243891899[23] = 0;
   out_4270406951243891899[24] = 0;
   out_4270406951243891899[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4270406951243891899[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4270406951243891899[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4270406951243891899[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4270406951243891899[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4270406951243891899[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4270406951243891899[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4270406951243891899[32] = 0;
   out_4270406951243891899[33] = 0;
   out_4270406951243891899[34] = 0;
   out_4270406951243891899[35] = 0;
   out_4270406951243891899[36] = 0;
   out_4270406951243891899[37] = 0;
   out_4270406951243891899[38] = 0;
   out_4270406951243891899[39] = 0;
   out_4270406951243891899[40] = 0;
   out_4270406951243891899[41] = 0;
   out_4270406951243891899[42] = 0;
   out_4270406951243891899[43] = 0;
   out_4270406951243891899[44] = 0;
   out_4270406951243891899[45] = 0;
   out_4270406951243891899[46] = 0;
   out_4270406951243891899[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4270406951243891899[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4270406951243891899[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4270406951243891899[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4270406951243891899[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4270406951243891899[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4270406951243891899[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4270406951243891899[54] = 0;
   out_4270406951243891899[55] = 0;
   out_4270406951243891899[56] = 0;
   out_4270406951243891899[57] = 0;
   out_4270406951243891899[58] = 0;
   out_4270406951243891899[59] = 0;
   out_4270406951243891899[60] = 0;
   out_4270406951243891899[61] = 0;
   out_4270406951243891899[62] = 0;
   out_4270406951243891899[63] = 0;
   out_4270406951243891899[64] = 0;
   out_4270406951243891899[65] = 0;
}
void h_14(double *state, double *unused, double *out_3706110223310072950) {
   out_3706110223310072950[0] = state[10];
   out_3706110223310072950[1] = state[11];
   out_3706110223310072950[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4161479345061075659) {
   out_4161479345061075659[0] = 0;
   out_4161479345061075659[1] = 0;
   out_4161479345061075659[2] = 0;
   out_4161479345061075659[3] = 0;
   out_4161479345061075659[4] = 0;
   out_4161479345061075659[5] = 0;
   out_4161479345061075659[6] = 0;
   out_4161479345061075659[7] = 0;
   out_4161479345061075659[8] = 0;
   out_4161479345061075659[9] = 0;
   out_4161479345061075659[10] = 1;
   out_4161479345061075659[11] = 0;
   out_4161479345061075659[12] = 0;
   out_4161479345061075659[13] = 0;
   out_4161479345061075659[14] = 0;
   out_4161479345061075659[15] = 0;
   out_4161479345061075659[16] = 0;
   out_4161479345061075659[17] = 0;
   out_4161479345061075659[18] = 0;
   out_4161479345061075659[19] = 0;
   out_4161479345061075659[20] = 0;
   out_4161479345061075659[21] = 0;
   out_4161479345061075659[22] = 0;
   out_4161479345061075659[23] = 0;
   out_4161479345061075659[24] = 0;
   out_4161479345061075659[25] = 0;
   out_4161479345061075659[26] = 0;
   out_4161479345061075659[27] = 0;
   out_4161479345061075659[28] = 0;
   out_4161479345061075659[29] = 0;
   out_4161479345061075659[30] = 0;
   out_4161479345061075659[31] = 0;
   out_4161479345061075659[32] = 0;
   out_4161479345061075659[33] = 1;
   out_4161479345061075659[34] = 0;
   out_4161479345061075659[35] = 0;
   out_4161479345061075659[36] = 0;
   out_4161479345061075659[37] = 0;
   out_4161479345061075659[38] = 0;
   out_4161479345061075659[39] = 0;
   out_4161479345061075659[40] = 0;
   out_4161479345061075659[41] = 0;
   out_4161479345061075659[42] = 0;
   out_4161479345061075659[43] = 0;
   out_4161479345061075659[44] = 0;
   out_4161479345061075659[45] = 0;
   out_4161479345061075659[46] = 0;
   out_4161479345061075659[47] = 0;
   out_4161479345061075659[48] = 0;
   out_4161479345061075659[49] = 0;
   out_4161479345061075659[50] = 0;
   out_4161479345061075659[51] = 0;
   out_4161479345061075659[52] = 0;
   out_4161479345061075659[53] = 0;
   out_4161479345061075659[54] = 0;
   out_4161479345061075659[55] = 0;
   out_4161479345061075659[56] = 1;
   out_4161479345061075659[57] = 0;
   out_4161479345061075659[58] = 0;
   out_4161479345061075659[59] = 0;
   out_4161479345061075659[60] = 0;
   out_4161479345061075659[61] = 0;
   out_4161479345061075659[62] = 0;
   out_4161479345061075659[63] = 0;
   out_4161479345061075659[64] = 0;
   out_4161479345061075659[65] = 0;
}
void h_33(double *state, double *unused, double *out_414582735699757719) {
   out_414582735699757719[0] = state[16];
   out_414582735699757719[1] = state[17];
   out_414582735699757719[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3610877930282233494) {
   out_3610877930282233494[0] = 0;
   out_3610877930282233494[1] = 0;
   out_3610877930282233494[2] = 0;
   out_3610877930282233494[3] = 0;
   out_3610877930282233494[4] = 0;
   out_3610877930282233494[5] = 0;
   out_3610877930282233494[6] = 0;
   out_3610877930282233494[7] = 0;
   out_3610877930282233494[8] = 0;
   out_3610877930282233494[9] = 0;
   out_3610877930282233494[10] = 0;
   out_3610877930282233494[11] = 0;
   out_3610877930282233494[12] = 0;
   out_3610877930282233494[13] = 0;
   out_3610877930282233494[14] = 0;
   out_3610877930282233494[15] = 0;
   out_3610877930282233494[16] = 1;
   out_3610877930282233494[17] = 0;
   out_3610877930282233494[18] = 0;
   out_3610877930282233494[19] = 0;
   out_3610877930282233494[20] = 0;
   out_3610877930282233494[21] = 0;
   out_3610877930282233494[22] = 0;
   out_3610877930282233494[23] = 0;
   out_3610877930282233494[24] = 0;
   out_3610877930282233494[25] = 0;
   out_3610877930282233494[26] = 0;
   out_3610877930282233494[27] = 0;
   out_3610877930282233494[28] = 0;
   out_3610877930282233494[29] = 0;
   out_3610877930282233494[30] = 0;
   out_3610877930282233494[31] = 0;
   out_3610877930282233494[32] = 0;
   out_3610877930282233494[33] = 0;
   out_3610877930282233494[34] = 0;
   out_3610877930282233494[35] = 0;
   out_3610877930282233494[36] = 0;
   out_3610877930282233494[37] = 0;
   out_3610877930282233494[38] = 0;
   out_3610877930282233494[39] = 1;
   out_3610877930282233494[40] = 0;
   out_3610877930282233494[41] = 0;
   out_3610877930282233494[42] = 0;
   out_3610877930282233494[43] = 0;
   out_3610877930282233494[44] = 0;
   out_3610877930282233494[45] = 0;
   out_3610877930282233494[46] = 0;
   out_3610877930282233494[47] = 0;
   out_3610877930282233494[48] = 0;
   out_3610877930282233494[49] = 0;
   out_3610877930282233494[50] = 0;
   out_3610877930282233494[51] = 0;
   out_3610877930282233494[52] = 0;
   out_3610877930282233494[53] = 0;
   out_3610877930282233494[54] = 0;
   out_3610877930282233494[55] = 0;
   out_3610877930282233494[56] = 0;
   out_3610877930282233494[57] = 0;
   out_3610877930282233494[58] = 0;
   out_3610877930282233494[59] = 0;
   out_3610877930282233494[60] = 0;
   out_3610877930282233494[61] = 0;
   out_3610877930282233494[62] = 1;
   out_3610877930282233494[63] = 0;
   out_3610877930282233494[64] = 0;
   out_3610877930282233494[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5465641885577763319) {
  H(in_vec, out_5465641885577763319);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2162730634078729501) {
  err_fun(nom_x, delta_x, out_2162730634078729501);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2784842220323608381) {
  inv_err_fun(nom_x, true_x, out_2784842220323608381);
}
void live_H_mod_fun(double *state, double *out_8629437051351605834) {
  H_mod_fun(state, out_8629437051351605834);
}
void live_f_fun(double *state, double dt, double *out_9119723707155781877) {
  f_fun(state,  dt, out_9119723707155781877);
}
void live_F_fun(double *state, double dt, double *out_2926342148693202044) {
  F_fun(state,  dt, out_2926342148693202044);
}
void live_h_4(double *state, double *unused, double *out_122350829928085436) {
  h_4(state, unused, out_122350829928085436);
}
void live_H_4(double *state, double *unused, double *out_3125739590203371811) {
  H_4(state, unused, out_3125739590203371811);
}
void live_h_9(double *state, double *unused, double *out_3706110223310072950) {
  h_9(state, unused, out_3706110223310072950);
}
void live_H_9(double *state, double *unused, double *out_4161479345061075659) {
  H_9(state, unused, out_4161479345061075659);
}
void live_h_10(double *state, double *unused, double *out_1500255286745539056) {
  h_10(state, unused, out_1500255286745539056);
}
void live_H_10(double *state, double *unused, double *out_58979021465123944) {
  H_10(state, unused, out_58979021465123944);
}
void live_h_12(double *state, double *unused, double *out_6311704777123009525) {
  h_12(state, unused, out_6311704777123009525);
}
void live_H_12(double *state, double *unused, double *out_8939746106463446809) {
  H_12(state, unused, out_8939746106463446809);
}
void live_h_35(double *state, double *unused, double *out_3352441690342662506) {
  h_35(state, unused, out_3352441690342662506);
}
void live_H_35(double *state, double *unused, double *out_6761434934921091098) {
  H_35(state, unused, out_6761434934921091098);
}
void live_h_32(double *state, double *unused, double *out_4786345732318478291) {
  h_32(state, unused, out_4786345732318478291);
}
void live_H_32(double *state, double *unused, double *out_8798827715940006022) {
  H_32(state, unused, out_8798827715940006022);
}
void live_h_13(double *state, double *unused, double *out_1755976025828354517) {
  h_13(state, unused, out_1755976025828354517);
}
void live_H_13(double *state, double *unused, double *out_4270406951243891899) {
  H_13(state, unused, out_4270406951243891899);
}
void live_h_14(double *state, double *unused, double *out_3706110223310072950) {
  h_14(state, unused, out_3706110223310072950);
}
void live_H_14(double *state, double *unused, double *out_4161479345061075659) {
  H_14(state, unused, out_4161479345061075659);
}
void live_h_33(double *state, double *unused, double *out_414582735699757719) {
  h_33(state, unused, out_414582735699757719);
}
void live_H_33(double *state, double *unused, double *out_3610877930282233494) {
  H_33(state, unused, out_3610877930282233494);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
